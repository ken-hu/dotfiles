# ENV
export LOGNAME=khu
export USER=khu
export WSPACE=$HOME/work
export NUODB_HOME=$WSPACE/nuodb/dist
export THIRDPARTY_DIR=$WSPACE/nuo3rdparty
export USE_CCACHE=true

# SQL Logic Tests
#export TESTS=$HOME/nuodbtests/sqllogic/test
#export DYLD_LIBRARY_PATH=$NUODB_HOME/lib64/
#export BINARY=$WSPACE/PortSLT/src
#export ODBCINI=$WSPACE/odbc.ini

export PKG_CONFIG_PATH="/usr/local/Cellar/icu4c/58.2/lib/pkgconfig:$PKG_CONFIG_PATH"

# PATH
[[ -d "$THIRDPARTY_DIR" ]] && PATH=$THIRDPARTY_DIR/common/bin:$PATH
[[ -x "$(which nuoarch)" ]] && PATH=$THIRDPARTY_DIR/$(nuoarch)/bin:$PATH

# alias
alias n='cd $WSPACE/nuodb'
alias n2='cd $WSPACE/nuodb2'
alias k='nps -k'
alias bcfg='./build/bld cfg -G "Unix Makefiles" -b Debug -DCMAKE_UNITY_BUILD=ON -DENABLE_PCH=OFF'
alias bcfgr='./build/bld cfg -G "Unix Makefiles" -b RelWithDebInfo -DCMAKE_UNITY_BUILD=ON -DENABLE_PCH=OFF'
alias bc='./build/bld cpp'
alias bn='./build/bld cpp --target nuodb'
alias bd='./build/bld cpp --target dist'
alias bsql='./build/bld cpp --target nuosql'
alias b='./build/bld'
alias bbc='./build/bld bamboo --create -u khu'
alias bbs='./build/bld bamboo --start -u khu'
alias pylint='./build/static/python/run_pylint'

alias s='nstart'
alias sql='s sql'
alias sqlt='s sql --timer full'
alias m='s mgr'
alias mc='s mgrc'
alias nuochk='$NUODB_HOME/bin/nuochk'
alias nuoarchive='$NUODB_HOME/bin/nuoarchive'
alias nuodb='$NUOBD_HOME/bin/nuodb'
alias atomDecoder='$NUODB_HOME/bin/atomDecoder'
alias nuoadmin='$NUODB_HOME/etc/nuoadmin'
alias nuocmd='PYTHONPATH=$PYTHONPATH:$THIRDPARTY_DIR/common/python/lib/python2.7/site-packages:$THIRDPARTY_DIR/common/nuodb-python ./dist/bin/nuocmd --client-key dist/var/etc/nuocmd.pem --verify-server dist/var/etc/nuoadmin.cert'
alias exp3party='export THIRDPARTY_DIR=$WSPACE/nuo3rdparty && echo $THIRDPARTY_DIR'
alias exp3partyrel='export THIRDPARTY_DIR=$WSPACE/nuo3rdpartyrel && echo $THIRDPARTY_DIR'
alias log2uml='~/bin/log2uml/log2uml.py'
alias emacs='emacs --user $(whoami)'

alias vpn='sudo sh -c "openfortivpn -c $WSPACE/vpnconfig &> /tmp/vpn.log" &'
alias kvpn='nps -k vpn'

alias nag="$LOCAL/bin/ag --color-path '35' --color-match '1;32' --color-line-number '' -G 'h|py|cpp|java'"

__cdhooks_update_env() {
    builtin "$@"
    if [ $(dirname $PWD) = $WSPACE ] && [ -d $PWD/dist ]; then
      export NUODB_HOME=$PWD/dist
      echo "NUODB_HOME is now $NUODB_HOME"
    fi
}

__cdhooks_worktree() {
    __cdhooks_update_env cd $WSPACE/$1
}

alias cd='__cdhooks_update_env cd'
alias wd='__cdhooks_worktree'
